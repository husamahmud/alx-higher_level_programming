The ``100-matrix_mul`` module
======================

Using ``matrix_mul``
----------------------

# First import funciton from the module:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul
    

# Test case 1: m_a is not a list argument:
	>>> matrix_mul('a', 'a')
	Traceback (most recent call last):
	TypeError: m_a must be a list

# Test case 2: m_b is not a list argument:
	>>> matrix_mul([[1, 2, 3]], 'a')
	Traceback (most recent call last):
	TypeError: m_b must be a list

# Test case 3: m_a is not a list of lists argument:
	>>> matrix_mul([1, 2, 3], [[1, 2, 3]])
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

# Test case 4: m_b is not a list of lists argument:
	>>> matrix_mul([[1, 2, 3]], [1, 2, 3])
	Traceback (most recent call last):
	TypeError: m_b must be a list of lists

# Test case 5: m_a is not an empty list argument:
	>>> matrix_mul([], [[1, 2, 3]])
	Traceback (most recent call last):
	ValueError: m_a can't be empty

# Test case 6: m_a is not an emprty list of lists argument:
	>>> matrix_mul([[]], [[1, 2, 3]])
	Traceback (most recent call last):
	ValueError: m_a can't be empty

# Test case 7: m_b is not an emprty list of lists argument:
	>>> matrix_mul([[1, 2, 3, 4]], [[]])
	Traceback (most recent call last):
	ValueError: m_b can't be empty

# Test case 8: m_a is not a list of lists of ints or floats argument:
	>>> matrix_mul([[1, 2, 'a', 4]], [[1, 2, 3, 4]])
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats

# Test case 9: m_a is not a list of lists of same len argument:
	>>> matrix_mul([[1, 2], [3, 4, 3]], [[1, 2, 3, 4]])
	Traceback (most recent call last):
	TypeError: each row of m_a must be of the same size

# Test case 10: m_b is not a list of lists of ints or floats argument:
	>>> matrix_mul([[1, 2, 3, 4]], [[1, 2, '3', 4]])
	Traceback (most recent call last):
	TypeError: m_b should contain only integers or floats

# Test case 11: m_b is not a list of lists of same len argument:
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [3, 4]])
	Traceback (most recent call last):
	TypeError: each row of m_b must be of the same size

# Test case 12: m_a is not multiplayable argument:
	>>> matrix_mul([[1, 2, 3],[4, 5, 6]], [[7, 8],[9, 10],[11, 12],[13, 14]])
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied
