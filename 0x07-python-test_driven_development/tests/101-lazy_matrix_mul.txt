The ``101-lazy_matrix_mul.py`` module
======================

Using ``lazy_matrix_mul``
-------------------

This is an lazy_matrix_mul test file
First import ``lazy_matrix_mul`` from the ``101-lazy_matrix_mul.py.py`` module:

    >>> lazy_matrix_mul = __import__("101-lazy_matrix_mul").lazy_matrix_mul

------------------------------------------------------------
m_a not list:
    >>> lazy_matrix_mul("Emad", [[7, 10], [15, 22]])
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

m_b not list:
    >>> lazy_matrix_mul([[7, 10], [15, 22]], "Emad")
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

-------------------------------------------------------------
m_a not list of lists:
    >>> lazy_matrix_mul([7, 10, 15], [[7, 10], [15, 22]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (3,) and (2,2) not aligned: 3 (dim 0) != 2 (dim 0)

m_b not list of lists:
    >>> lazy_matrix_mul([[7, 10], [15, 22]], [7, 10, 15])
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (3,) not aligned: 2 (dim 1) != 3 (dim 0)

-------------------------------------------------------------
m_a is empty:
    >>> lazy_matrix_mul([[]], [[7, 10], [15, 22]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

m_b is empty:
    >>> lazy_matrix_mul([[7, 10], [15, 22]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

-------------------------------------------------------------
m_a one element not int or flaot:
    >>> lazy_matrix_mul([[1, "2"], [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

m_b one element not int or flaot:
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, "2"], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

-------------------------------------------------------------
m_a all ‘rows’ not same size:
    >>> lazy_matrix_mul([[1, 2, 5], [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

m_b all ‘rows’ not same size:
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

-------------------------------------------------------------
1 invalid matrix of int:
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [3, 4, 5], [1, 2, 3]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (3,3) not aligned: 2 (dim 1) != 3 (dim 0)

-------------------------------------------------------------
2 valid matrices matrises:
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])
